version: "3"

services:
  # gglass service
  gglass:
    image: zaephor/gglass:dev
    restart: always
    expose:
      - "8080"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./gglass-config:/config"
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ: "${TZ:-America/Los_Angeles}"
    labels:
      # Enable for traefik
      - "traefik.enable=true"

      # Traefik service config
      - "traefik.http.services.gglass.loadbalancer.server.port=8080"
      - "traefik.http.services.gglass.loadbalancer.server.scheme=http"

      # Gglass health check(optional)
      - "traefik.http.services.gglass.loadbalancer.healthcheck.path=/api?action=status"
      - "traefik.http.services.gglass.loadbalancer.healthcheck.interval=15s"
      - "traefik.http.services.gglass.loadbalancer.healthcheck.timeout=3s"

      # Traefik router config
      - "traefik.http.routers.gglass.service=gglass"
      - "traefik.http.routers.gglass.rule=HostRegexp(`${GGLASS_DOMAIN:-{catchall:.+}}`)"
      - "traefik.http.routers.gglass.priority=2"
      - "traefik.http.routers.gglass.entrypoints=web,websecure"

      # Gglass auth middleware for traefik
      - "traefik.http.middlewares.gglass-auth.forwardauth.address=http://gglass:8080/api?action=user:traefik:auth_check"

      # Gglass extra middleware config for chaining multiple gglass+traefik hosts
      - "traefik.http.middlewares.gglass-auth.forwardauth.authResponseHeaders=x-gglass-peerkey,x-gglass-usergroups"
